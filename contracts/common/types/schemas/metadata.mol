import basic;

table Validator {
    bls_pub_key: Byte97,
    pub_key: Bytes,
    address: Identity,
    propose_weight: Byte4,
    vote_weight: Byte4,
    propose_count: Byte4,
}

table ValidatorHistory {
    address: Identity,
    propose_count: Byte4,
}

vector MetadataList <Metadata>;
vector ValidatorList <Validator>;
vector ValidatorHistoryList <ValidatorHistory>;

table Metadata {
    epoch_len: Byte8, //how many periods as one epoch
    period_len: Byte4, //how many blocks as one period
    quorum: Byte4,
    gas_limit: Byte8, //le_u64
    gas_price: Byte8, //le_u64
    interval: Byte4, //le_u32
    validators: ValidatorList,
    propose_ratio: Byte4, //le_u32
    prevote_ratio: Byte4, //le_u32
    precommit_ratio: Byte4, //le_u32
    brake_ratio: Byte4, //le_u32
    tx_num_limit: Byte4, //le_u32
    max_tx_size: Byte4, //le_u32
}

table MetadataCellData {
	version: byte,
	epoch: Byte8, //le_u64
	metadata: MetadataList, // metadatas of current and next epoch 
    validators_history: ValidatorHistoryList,  // at most 80 elements
}