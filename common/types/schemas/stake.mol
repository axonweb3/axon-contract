import basic;

table StakeArgs {
    metadata_type_id: Byte32,
    stake_addr:       IdentityOpt, // stake smt cell is None, stake at cell is Some
}

table StakeInfoDelta {
    is_increase:        byte, // increase or decrease stake, 1 is increase, 0 is decrease
    amount:             Uint128,
    inauguration_epoch: Uint64,
}

// The data[0..16] is a le_u128 means xUDT amount.
// So the cell data is decode from offset 16.
table StakeAtCellData {
    version:            byte,
    l1_pub_key:         Byte65,
    l1_address:         Identity,
    l2_address:         Identity,
    metadata_type_id:   Byte32,
    delta:              StakeInfoDelta, 
}

table StakeSmtCellData {
    version:              byte,
    smt_root:             Byte32, // smt root of all staker infos
    metadata_type_id:     Byte32,
}

// stake smt cell witness
table StakeInfo {
    addr:            Identity,
    amount:          Uint128,
}

vector StakeInfos <StakeInfo>;

table StakeSmtUpdateInfo {
    all_stake_infos: StakeInfos, // all stake info
    old_epoch_proof: Bytes,
    new_epoch_proof: Bytes,
}
